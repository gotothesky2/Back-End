# default profile settings
spring:
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: local

  # OAuth2
  security:
    oauth2:
      client:
        registration: # 클라이언트 식별
          # Kakao
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            #redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            #redirect-uri:
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
        provider:
          # Kakao
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
---
# Swagger
springdoc:
  swagger-ui:
    path: /swagger
  cache:
    disabled: true
  use-fqn: true
  packages-to-scan: hackerthon.likelion13th.canfly
---
# DB-JPA Global settig
spring:
  #MySQL
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  #JPA
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
---
# S3
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}
      path:
        location: location
    credentials:
      accessKey: ${AWS_S3_ACCESS_KEY}
      secretKey: ${AWS_S3_SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false
---
# JWT
jwt:
  secret: ${JWT_SECRET}
  accessExpirationTime: ${JWT_EXPIRATION}
  refreshExpirationTime: ${JWT_REFRESH_EXPIRATION}
---
# CAREER
career:
  base-url: https://www.career.go.kr/cnet/openapi
  api-key:  ${CAREER_API_KEY}
---
# Local
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  oauth2:
    redirect-url: ${LOGIN_LOCAL_REDIRECT_URI}
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
---
frontend:
  base-url: ${FRONTEND_BASE_URL}
---
# Develop
spring:
  config:
    activate:
      on-profile: develop
  datasource:
    url: ${AWS_DB_URL}
    username: ${AWS_DB_USERNAME}
    password: ${AWS_DB_PASSWORD}
  data:
    redis:
      host: ${VALKEY_HOST}
      port: ${VALKEY_PORT}
  oauth2:
    redirect-url: ${LOGIN_DEVELOPE_REDIRECT_URI}
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: https://www.can-fly.shop/login/oauth2/code/kakao

server:
  tomcat:
    threads:
      max: ${SERVER_TOMCAT_THREADS_MAX:50}